{"ast":null,"code":"import _slicedToArray from \"/Users/elliot/Desktop/Projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js\";\nimport React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ProjectCard from './ProjectCard';\nimport ReactLogo from '../assets/images/react-logo.png';\nexport default function ProjectsGrid() {\n  const _useState = useState({\n    items: [{\n      id: 0,\n      title: 'Project 1',\n      description: 'This is sample text',\n      imgSrc: ReactLogo,\n      gitLink: '',\n      demoLink: '/',\n      selected: false\n    }, {\n      id: 1,\n      title: 'Project 2',\n      description: 'This is a fake description',\n      imgSrc: ReactLogo,\n      gitLink: '',\n      demoLink: '/',\n      selected: false\n    }, {\n      id: 2,\n      title: 'Project 3',\n      description: 'This will say something about this project',\n      imgSrc: ReactLogo,\n      gitLink: '',\n      selected: false\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        state = _useState2[0];\n\n  const chunk = items => {\n    const chunked = [];\n\n    while (items.length) {\n      chunked.push(items.splice(0, 3));\n    }\n\n    return chunked;\n  };\n\n  const makeItems = items => {\n    const gridItems = chunk(items);\n    const rows = [];\n\n    for (let i = 0; i < gridItems.length; i++) {\n      rows.push([...gridItems[i]]);\n    }\n\n    let incr = 0;\n    const mappedRows = rows.map(row => {\n      incr++;\n      return React.createElement(Row, {\n        key: incr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, row.map(item => React.createElement(ProjectCard, {\n        item: item,\n        title: item.title,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    });\n    return mappedRows;\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CardDeck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, makeItems(state.items)));\n}","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js"],"names":["React","useState","Container","Row","CardDeck","ProjectCard","ReactLogo","ProjectsGrid","items","id","title","description","imgSrc","gitLink","demoLink","selected","state","chunk","chunked","length","push","splice","makeItems","gridItems","rows","i","incr","mappedRows","map","row","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,SAAP,MAAsB,iCAAtB;AAEA,eAAe,SAASC,YAAT,GAAyB;AAAA,oBACtBN,QAAQ,CAAC;AACvBO,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,WAAW,EAAE,qBAHf;AAIEC,MAAAA,MAAM,EAAEN,SAJV;AAKEO,MAAAA,OAAO,EAAE,EALX;AAMEC,MAAAA,QAAQ,EAAE,GANZ;AAOEC,MAAAA,QAAQ,EAAE;AAPZ,KADK,EAUL;AACEN,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,WAAW,EAAE,4BAHf;AAIEC,MAAAA,MAAM,EAAEN,SAJV;AAKEO,MAAAA,OAAO,EAAE,EALX;AAMEC,MAAAA,QAAQ,EAAE,GANZ;AAOEC,MAAAA,QAAQ,EAAE;AAPZ,KAVK,EAmBL;AACEN,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,WAAW,EAAE,4CAHf;AAIEC,MAAAA,MAAM,EAAEN,SAJV;AAKEO,MAAAA,OAAO,EAAE,EALX;AAMEE,MAAAA,QAAQ,EAAE;AANZ,KAnBK;AADgB,GAAD,CADc;AAAA;AAAA,QAC/BC,KAD+B;;AAgCtC,QAAMC,KAAK,GAAIT,KAAD,IAAW;AACvB,UAAMU,OAAO,GAAG,EAAhB;;AAEA,WAAOV,KAAK,CAACW,MAAb,EAAqB;AACnBD,MAAAA,OAAO,CAACE,IAAR,CAAaZ,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAb;AACD;;AAED,WAAOH,OAAP;AACD,GARD;;AAUA,QAAMI,SAAS,GAAId,KAAD,IAAW;AAC3B,UAAMe,SAAS,GAAGN,KAAK,CAACT,KAAD,CAAvB;AACA,UAAMgB,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACJ,MAA9B,EAAsCM,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,IAAI,CAACJ,IAAL,CAAU,CAAC,GAAGG,SAAS,CAACE,CAAD,CAAb,CAAV;AACD;;AAED,QAAIC,IAAI,GAAG,CAAX;AACA,UAAMC,UAAU,GAAGH,IAAI,CAACI,GAAL,CAASC,GAAG,IAAI;AACjCH,MAAAA,IAAI;AACJ,aAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJG,GAAG,CAACD,GAAJ,CAAQE,IAAI,IAAI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAnB;AAAyB,QAAA,KAAK,EAAEA,IAAI,CAACpB,KAArC;AAA4C,QAAA,GAAG,EAAEoB,IAAI,CAACrB,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CADI,CAAP;AAGD,KALkB,CAAnB;AAOA,WAAOkB,UAAP;AACD,GAjBD;;AAmBA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,CAACN,KAAK,CAACR,KAAP,CADZ,CADF,CADF;AAOD","sourcesContent":["import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ProjectCard from './ProjectCard';\n\nimport ReactLogo from '../assets/images/react-logo.png';\n\nexport default function ProjectsGrid () {\n  const [state] = useState({\n    items: [\n      {\n        id: 0,\n        title: 'Project 1',\n        description: 'This is sample text',\n        imgSrc: ReactLogo,\n        gitLink: '',\n        demoLink: '/',\n        selected: false\n      },\n      {\n        id: 1,\n        title: 'Project 2',\n        description: 'This is a fake description',\n        imgSrc: ReactLogo,\n        gitLink: '',\n        demoLink: '/',\n        selected: false\n      },\n      {\n        id: 2,\n        title: 'Project 3',\n        description: 'This will say something about this project',\n        imgSrc: ReactLogo,\n        gitLink: '',\n        selected: false\n      }\n    ]\n  });\n\n  const chunk = (items) => {\n    const chunked = [];\n\n    while (items.length) {\n      chunked.push(items.splice(0, 3));\n    }\n\n    return chunked;\n  }\n\n  const makeItems = (items) => {\n    const gridItems = chunk(items);\n    const rows = [];\n\n    for (let i = 0; i < gridItems.length; i++) {\n      rows.push([...gridItems[i]]);\n    }\n\n    let incr = 0;\n    const mappedRows = rows.map(row => {\n      incr++;\n      return <Row key={incr}>\n        {row.map(item => <ProjectCard item={item} title={item.title} key={item.id} />)}\n      </Row>;\n    });\n\n    return mappedRows;\n  }\n\n  return (\n    <Container>\n      <CardDeck>\n        {makeItems(state.items)}\n      </CardDeck>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}