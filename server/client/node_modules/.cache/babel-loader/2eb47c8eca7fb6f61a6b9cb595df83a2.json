{"ast":null,"code":"import _slicedToArray from \"/Users/elliot/Desktop/Projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport ProjectCard from './ProjectCard';\nimport ReactLogo from '../assets/images/react-logo.png';\nexport default function ProjectsGrid() {\n  const _useState = useState({\n    items: [{\n      id: 0,\n      title: 'Project 1',\n      description: 'This is sample text',\n      imgSrc: ReactLogo,\n      gitLink: '',\n      demoLink: '/',\n      selected: false\n    }, {\n      id: 1,\n      title: 'Project 2',\n      description: 'This is a fake description',\n      imgSrc: ReactLogo,\n      gitLink: '',\n      demoLink: '/',\n      selected: false\n    }, {\n      id: 2,\n      title: 'Project 3',\n      description: 'This will say something about this project',\n      imgSrc: ReactLogo,\n      gitLink: '',\n      selected: false\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        state = _useState2[0];\n\n  const chunk = items => {\n    const chunked = [];\n\n    while (items.length) {\n      chunked.push(items.splice(0, 3));\n    }\n\n    return chunked;\n  };\n\n  const makeItems = items => {\n    const gridItems = chunk(items);\n    const rows = [];\n\n    for (let i = 0; i < gridItems.length; i++) {\n      rows.push([...gridItems[i]]);\n    }\n\n    let incr = 0;\n    const mappedRows = rows.map(row => {\n      incr++;\n      {\n        /* return <Row key={incr}>\n              {row.map(item => <ProjectCard item={item} title={item.title} key={item.id} />)}\n            </Row>; */\n      }\n    });\n    return mappedRows;\n  };\n\n  return {\n    /* <Container>\n          <CardDeck>\n            {makeItems(state.items)}\n          </CardDeck>\n        </Container> */\n  };\n}","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js"],"names":["React","useState","ProjectCard","ReactLogo","ProjectsGrid","items","id","title","description","imgSrc","gitLink","demoLink","selected","state","chunk","chunked","length","push","splice","makeItems","gridItems","rows","i","incr","mappedRows","map","row"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,SAAP,MAAsB,iCAAtB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA,oBACrBH,QAAQ,CAAC;AACvBI,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,WAAW,EAAE,qBAHf;AAIEC,MAAAA,MAAM,EAAEN,SAJV;AAKEO,MAAAA,OAAO,EAAE,EALX;AAMEC,MAAAA,QAAQ,EAAE,GANZ;AAOEC,MAAAA,QAAQ,EAAE;AAPZ,KADK,EAUL;AACEN,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,WAAW,EAAE,4BAHf;AAIEC,MAAAA,MAAM,EAAEN,SAJV;AAKEO,MAAAA,OAAO,EAAE,EALX;AAMEC,MAAAA,QAAQ,EAAE,GANZ;AAOEC,MAAAA,QAAQ,EAAE;AAPZ,KAVK,EAmBL;AACEN,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,WAFT;AAGEC,MAAAA,WAAW,EAAE,4CAHf;AAIEC,MAAAA,MAAM,EAAEN,SAJV;AAKEO,MAAAA,OAAO,EAAE,EALX;AAMEE,MAAAA,QAAQ,EAAE;AANZ,KAnBK;AADgB,GAAD,CADa;AAAA;AAAA,QAC9BC,KAD8B;;AAgCrC,QAAMC,KAAK,GAAIT,KAAD,IAAW;AACvB,UAAMU,OAAO,GAAG,EAAhB;;AAEA,WAAOV,KAAK,CAACW,MAAb,EAAqB;AACnBD,MAAAA,OAAO,CAACE,IAAR,CAAaZ,KAAK,CAACa,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAb;AACD;;AAED,WAAOH,OAAP;AACD,GARD;;AAUA,QAAMI,SAAS,GAAId,KAAD,IAAW;AAC3B,UAAMe,SAAS,GAAGN,KAAK,CAACT,KAAD,CAAvB;AACA,UAAMgB,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACJ,MAA9B,EAAsCM,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,IAAI,CAACJ,IAAL,CAAU,CAAC,GAAGG,SAAS,CAACE,CAAD,CAAb,CAAV;AACD;;AAED,QAAIC,IAAI,GAAG,CAAX;AACA,UAAMC,UAAU,GAAGH,IAAI,CAACI,GAAL,CAAUC,GAAD,IAAS;AACnCH,MAAAA,IAAI;AACJ;AACE;;;AAGD;AACF,KAPkB,CAAnB;AASA,WAAOC,UAAP;AACD,GAnBD;;AAqBA,SAAO;AACL;;;;;AADK,GAAP;AAOD","sourcesContent":["import React, { useState } from 'react';\n\nimport ProjectCard from './ProjectCard';\n\nimport ReactLogo from '../assets/images/react-logo.png';\n\nexport default function ProjectsGrid() {\n  const [state] = useState({\n    items: [\n      {\n        id: 0,\n        title: 'Project 1',\n        description: 'This is sample text',\n        imgSrc: ReactLogo,\n        gitLink: '',\n        demoLink: '/',\n        selected: false,\n      },\n      {\n        id: 1,\n        title: 'Project 2',\n        description: 'This is a fake description',\n        imgSrc: ReactLogo,\n        gitLink: '',\n        demoLink: '/',\n        selected: false,\n      },\n      {\n        id: 2,\n        title: 'Project 3',\n        description: 'This will say something about this project',\n        imgSrc: ReactLogo,\n        gitLink: '',\n        selected: false,\n      },\n    ],\n  });\n\n  const chunk = (items) => {\n    const chunked = [];\n\n    while (items.length) {\n      chunked.push(items.splice(0, 3));\n    }\n\n    return chunked;\n  };\n\n  const makeItems = (items) => {\n    const gridItems = chunk(items);\n    const rows = [];\n\n    for (let i = 0; i < gridItems.length; i++) {\n      rows.push([...gridItems[i]]);\n    }\n\n    let incr = 0;\n    const mappedRows = rows.map((row) => {\n      incr++;\n      {\n        /* return <Row key={incr}>\n              {row.map(item => <ProjectCard item={item} title={item.title} key={item.id} />)}\n            </Row>; */\n      }\n    });\n\n    return mappedRows;\n  };\n\n  return {\n    /* <Container>\n          <CardDeck>\n            {makeItems(state.items)}\n          </CardDeck>\n        </Container> */\n  };\n}\n"]},"metadata":{},"sourceType":"module"}