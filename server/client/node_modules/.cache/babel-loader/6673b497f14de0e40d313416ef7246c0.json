{"ast":null,"code":"var _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ProjectCard from './ProjectCard';\n\nclass ProjectsGrid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.chunkArray = arr => {\n      let chunked = [];\n\n      while (arr.length) {\n        chunked.push(arr.splice(0, 3));\n      }\n\n      return chunked;\n    };\n\n    this.makeItems = items => {\n      let gridItems = chunkArray(items);\n      return items.map(item => {\n        return React.createElement(ProjectCard, {\n          item: item,\n          title: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      items: [{\n        id: 0,\n        title: 'Project 1',\n        description: 'This is sample text',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 1,\n        title: 'Project 2',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 2,\n        title: 'Project 3',\n        description: 'This will say something about this project',\n        imgSrc: '',\n        gitLink: '',\n        selected: false\n      }, {\n        id: 3,\n        title: 'Project 4',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 4,\n        title: 'Project 5',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 5,\n        title: 'Project 6',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.makeItems(this.state.items))));\n  }\n\n}\n\nexport default ProjectsGrid;","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js"],"names":["React","Container","Row","CardDeck","ProjectCard","ProjectsGrid","Component","constructor","props","chunkArray","arr","chunked","length","push","splice","makeItems","items","gridItems","map","item","title","state","id","description","imgSrc","gitLink","demoLink","selected","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport ProjectCard from './ProjectCard';\n\nclass ProjectsGrid extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 0,\n          title: 'Project 1',\n          description: 'This is sample text',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 1,\n          title: 'Project 2',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 2,\n          title: 'Project 3',\n          description: 'This will say something about this project',\n          imgSrc: '',\n          gitLink: '',\n          selected: false\n        },\n        {\n          id: 3,\n          title: 'Project 4',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 4,\n          title: 'Project 5',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 5,\n          title: 'Project 6',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n      ]\n    };\n  }\n\n  chunkArray = (arr) => {\n    let chunked = [];\n    while(arr.length) {\n      chunked.push(arr.splice(0, 3))\n    }\n    return chunked;\n  }\n\n  makeItems = (items) => {    \n    let gridItems = chunkArray(items);\n    \n    return items.map(item => {\n      return <ProjectCard item={item} title={item.title} />\n    });\n  }\n\n  render () {\n    return (\n      <Container>\n        <CardDeck>\n          <Row>\n            {this.makeItems(this.state.items)}\n          </Row>\n        </CardDeck>\n      </Container>\n    );\n  }\n}\n\nexport default ProjectsGrid;\n"]},"metadata":{},"sourceType":"module"}