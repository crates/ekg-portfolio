{"ast":null,"code":"var _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ProjectCard from './ProjectCard';\n\nclass ProjectsGrid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeItems = items => {\n      let gridItems = () => {\n        let chunked = [];\n\n        while (items.length) {\n          chunked.push(items.splice(0, 3));\n        }\n\n        return chunked;\n      };\n\n      console.log(gridItems);\n\n      for (let i = 0; i < gridItems().length; i++) {\n        let row = [...gridItems()];\n        console.log(row); // return <Row>{row.map(item => {<ProjectCard item={item} title={item.title} />})}</Row>\n      } // return items.map(item => {\n      //   return <ProjectCard item={item} title={item.title} />\n      // });\n\n    };\n\n    this.state = {\n      items: [{\n        id: 0,\n        title: 'Project 1',\n        description: 'This is sample text',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 1,\n        title: 'Project 2',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 2,\n        title: 'Project 3',\n        description: 'This will say something about this project',\n        imgSrc: '',\n        gitLink: '',\n        selected: false\n      }, {\n        id: 3,\n        title: 'Project 4',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 4,\n        title: 'Project 5',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 5,\n        title: 'Project 6',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 6,\n        title: 'Project 7',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 7,\n        title: 'Project 8',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }, {\n        id: 8,\n        title: 'Project 9',\n        description: 'This is a fake description',\n        imgSrc: '',\n        gitLink: '',\n        demoLink: '',\n        selected: false\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.makeItems(this.state.items))));\n  }\n\n}\n\nexport default ProjectsGrid;","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/components/ProjectsGrid.js"],"names":["React","Container","Row","CardDeck","ProjectCard","ProjectsGrid","Component","constructor","props","makeItems","items","gridItems","chunked","length","push","splice","console","log","i","row","state","id","title","description","imgSrc","gitLink","demoLink","selected","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport ProjectCard from './ProjectCard';\n\nclass ProjectsGrid extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          id: 0,\n          title: 'Project 1',\n          description: 'This is sample text',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 1,\n          title: 'Project 2',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 2,\n          title: 'Project 3',\n          description: 'This will say something about this project',\n          imgSrc: '',\n          gitLink: '',\n          selected: false\n        },\n        {\n          id: 3,\n          title: 'Project 4',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 4,\n          title: 'Project 5',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 5,\n          title: 'Project 6',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 6,\n          title: 'Project 7',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 7,\n          title: 'Project 8',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n        {\n          id: 8,\n          title: 'Project 9',\n          description: 'This is a fake description',\n          imgSrc: '',\n          gitLink: '',\n          demoLink: '',\n          selected: false\n        },\n      ]\n    };\n  }\n\n  makeItems = (items) => { \n    let gridItems = () => {\n      let chunked = [];\n      while(items.length) {\n        chunked.push(items.splice(0, 3))\n      }\n      return chunked\n    };\n\n    console.log(gridItems);\n\n    for(let i = 0; i < gridItems().length; i++) {\n      let row = [...gridItems()];\n      console.log(row);\n      // return <Row>{row.map(item => {<ProjectCard item={item} title={item.title} />})}</Row>\n    }\n    \n    // return items.map(item => {\n    //   return <ProjectCard item={item} title={item.title} />\n    // });\n  }\n\n  render () {\n    return (\n      <Container>\n        <CardDeck>\n          <Row>\n            {this.makeItems(this.state.items)}\n          </Row>\n        </CardDeck>\n      </Container>\n    );\n  }\n}\n\nexport default ProjectsGrid;\n"]},"metadata":{},"sourceType":"module"}