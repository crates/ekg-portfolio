{"ast":null,"code":"import _slicedToArray from \"/Users/elliot/Desktop/Projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/pages/ContactPage.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nexport default function ContactPage(props) {\n  const _useState = useState({\n    name: '',\n    email: '',\n    message: '',\n    disabled: false,\n    emailSent: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    setState({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setState({\n      disabled: true\n    });\n    axios.post('http://localhost:3030/api/email', state).then(res => {\n      if (res.data.success) {\n        setState({\n          disabled: false,\n          emailSent: true\n        });\n      } else {\n        setState({\n          disabled: false,\n          emailSent: false\n        });\n      }\n    }).catch(err => {\n      setState({\n        disabled: false,\n        emailSent: false\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Hero, {\n    title: props.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"full-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Full Name\"), React.createElement(Form.Control, {\n    id: \"full-name\",\n    name: \"name\",\n    type: \"text\",\n    value: state.name,\n    onChange: handleChange(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    value: state.email,\n    onChange: handleChange(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Message\"), React.createElement(Form.Control, {\n    id: \"message\",\n    name: \"message\",\n    as: \"textarea\",\n    rows: \"3\",\n    value: state.message,\n    onChange: handleChange(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: \"d-inline-block\",\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: state.disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Send\"), state.emailSent === true && React.createElement(\"p\", {\n    className: \"d-inline success-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Email Sent\"), state.emailSent === false && React.createElement(\"p\", {\n    className: \"d-inline err-msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Email NOT Sent\"))));\n}","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/pages/ContactPage.js"],"names":["React","useState","axios","Hero","Content","Form","Button","ContactPage","props","name","email","message","disabled","emailSent","state","setState","handleChange","event","target","value","type","checked","handleSubmit","preventDefault","post","then","res","data","success","catch","err","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function ContactPage (props) {\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    message: '',\n    disabled: false,\n    emailSent: null\n  })\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    setState({\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setState({\n      disabled: true\n    });\n\n    axios.post('http://localhost:3030/api/email', state)\n      .then(res => {\n        if(res.data.success){\n          setState({\n            disabled: false,\n            emailSent: true\n          });\n        } else {\n          setState({\n            disabled: false,\n            emailSent: false\n          });\n        }\n      })\n      .catch(err => {\n        setState({\n          disabled: false,\n          emailSent: false\n        })\n      })\n  }\n\n  return (\n    <div>\n      <Hero title={props.title} />\n\n      <Content>\n        <Form onSubmit={handleSubmit()}>\n          <Form.Group>\n            <Form.Label htmlFor='full-name'>Full Name</Form.Label>\n            <Form.Control id='full-name' name='name' type='text' value={state.name} onChange={handleChange()}></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='email'>Email</Form.Label>\n            <Form.Control id='email' name='email' type='email' value={state.email} onChange={handleChange()}></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='message'>Message</Form.Label>\n            <Form.Control id='message' name='message' as='textarea' rows='3' value={state.message} onChange={handleChange()}></Form.Control>\n          </Form.Group>\n          <Button className='d-inline-block' variant='primary' type='submit' disabled={state.disabled}>\n            Send\n          </Button>\n\n          {state.emailSent === true && <p className='d-inline success-msg'>Email Sent</p>}\n          {state.emailSent === false && <p className='d-inline err-msg'>Email NOT Sent</p>}\n        </Form>\n      </Content>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}