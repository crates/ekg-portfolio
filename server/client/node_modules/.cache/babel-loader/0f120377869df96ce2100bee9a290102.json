{"ast":null,"code":"var _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/pages/ContactPage.js\";\nimport React from 'react';\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Hero, {\n      title: this.props.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(Form.Control, {\n      id: \"full-name\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Form.Control, {\n      id: \"message\",\n      name: \"message\",\n      type: \"textarea\",\n      rows: \"3\",\n      value: this.state.message,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"d-inline-block\",\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Send\"), this.state.emailSent === true && React.createElement(\"p\", {\n      className: \"d-inline success-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Email Sent\"), this.state.emailSent === false && React.createElement(\"p\", {\n      className: \"d-inline err-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Email Sent\"))));\n  }\n\n}\n\nexport default ContactPage;","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/pages/ContactPage.js"],"names":["React","Hero","Content","Form","ContactPage","Component","constructor","props","state","name","email","message","disabled","emailSent","render","title","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\nimport Form from 'react-bootstrap/Form';\n\nclass ContactPage extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  render () {\n    return (\n      <div>\n        <Hero title={this.props.title} />\n\n        <Content>\n          <Form>\n            <Form.Group>\n              <Form.Label htmlFor='full-name'>Full Name</Form.Label>\n              <Form.Control id='full-name' name='name' type='text' value={this.state.name} onChange={this.handleChange}></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='email'>Email</Form.Label>\n              <Form.Control id='email' name='email' type='email' value={this.state.email} onChange={this.handleChange}></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='message'>Message</Form.Label>\n              <Form.Control id='message' name='message' type='textarea' rows='3' value={this.state.message} onChange={this.handleChange}></Form.Control>\n            </Form.Group>\n            <Button className='d-inline-block' variant='primary' type='submit' disabled={this.state.disabled}>\n              Send\n            </Button>\n\n            {this.state.emailSent === true && <p className='d-inline success-msg'>Email Sent</p>}\n            {this.state.emailSent === false && <p className='d-inline err-msg'>Email Sent</p>}\n          </Form>\n        </Content>\n      </div>\n    );\n  }\n}\n\nexport default ContactPage;\n"]},"metadata":{},"sourceType":"module"}