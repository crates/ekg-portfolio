{"ast":null,"code":"var _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/pages/ContactPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        disabled: true\n      });\n      axios.post('http://localhost:3030/api/email', this.state).then(res => {\n        if (res.data.success) {\n          this.setState({\n            disabled: false,\n            emailSent: true\n          });\n        } else {\n          this.setState({\n            disabled: false,\n            emailSent: false\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          disabled: false,\n          emailSent: false\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Hero, {\n      title: this.props.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(Form.Control, {\n      id: \"full-name\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Form.Control, {\n      id: \"message\",\n      name: \"message\",\n      as: \"textarea\",\n      rows: \"3\",\n      value: this.state.message,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"d-inline-block\",\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Send\"), this.state.emailSent === true && React.createElement(\"p\", {\n      className: \"d-inline success-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Email Sent\"), this.state.emailSent === false && React.createElement(\"p\", {\n      className: \"d-inline err-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Email NOT Sent\"))));\n  }\n\n}\n\nexport default ContactPage;","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/pages/ContactPage.js"],"names":["React","axios","Hero","Content","Form","Button","ContactPage","Component","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleSubmit","preventDefault","disabled","post","state","then","res","data","success","emailSent","catch","err","email","message","render","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass ContactPage extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  handleChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      disabled: true\n    });\n\n    axios.post('http://localhost:3030/api/email', this.state)\n      .then(res => {\n        if(res.data.success){\n          this.setState({\n            disabled: false,\n            emailSent: true\n          });\n        } else {\n          this.setState({\n            disabled: false,\n            emailSent: false\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          disabled: false,\n          emailSent: false\n        })\n      })\n  }\n\n  render () {\n    return (\n      <div>\n        <Hero title={this.props.title} />\n\n        <Content>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor='full-name'>Full Name</Form.Label>\n              <Form.Control id='full-name' name='name' type='text' value={this.state.name} onChange={this.handleChange}></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='email'>Email</Form.Label>\n              <Form.Control id='email' name='email' type='email' value={this.state.email} onChange={this.handleChange}></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor='message'>Message</Form.Label>\n              <Form.Control id='message' name='message' as='textarea' rows='3' value={this.state.message} onChange={this.handleChange}></Form.Control>\n            </Form.Group>\n            <Button className='d-inline-block' variant='primary' type='submit' disabled={this.state.disabled}>\n              Send\n            </Button>\n\n            {this.state.emailSent === true && <p className='d-inline success-msg'>Email Sent</p>}\n            {this.state.emailSent === false && <p className='d-inline err-msg'>Email NOT Sent</p>}\n          </Form>\n        </Content>\n      </div>\n    );\n  }\n}\n\nexport default ContactPage;\n"]},"metadata":{},"sourceType":"module"}