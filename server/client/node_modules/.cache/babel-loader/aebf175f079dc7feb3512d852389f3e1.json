{"ast":null,"code":"import _slicedToArray from \"/Users/elliot/Desktop/Projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elliot/Desktop/Projects/portfolio/src/pages/Contact.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\nexport default function Contact(props) {\n  const _useState = useState({\n    name: '',\n    email: '',\n    message: '',\n    disabled: false,\n    emailSent: null\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    setState({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setState({\n      disabled: true\n    });\n    axios.post('http://localhost:3030/api/email', state).then(res => {\n      if (res.data.success) {\n        setState({\n          disabled: false,\n          emailSent: true\n        });\n      } else {\n        setState({\n          disabled: false,\n          emailSent: false\n        });\n      }\n    }).catch(err => {\n      setState({\n        disabled: false,\n        emailSent: false\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Contact\");\n}","map":{"version":3,"sources":["/Users/elliot/Desktop/Projects/portfolio/src/pages/Contact.js"],"names":["React","useState","axios","Hero","Content","Contact","props","name","email","message","disabled","emailSent","state","setState","handleChange","event","target","value","type","checked","handleSubmit","preventDefault","post","then","res","data","success","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACXL,QAAQ,CAAC;AACjCM,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,OAAO,EAAE,EAHwB;AAIjCC,IAAAA,QAAQ,EAAE,KAJuB;AAKjCC,IAAAA,SAAS,EAAE;AALsB,GAAD,CADG;AAAA;AAAA,QAC9BC,KAD8B;AAAA,QACvBC,QADuB;;AASrC,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,UAAMV,IAAI,GAAGS,MAAM,CAACT,IAApB;AAEAM,IAAAA,QAAQ,CAAC;AACP,OAACN,IAAD,GAAQU;AADD,KAAD,CAAR;AAGD,GARD;;AAUA,QAAMG,YAAY,GAAIL,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AAEAR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,QAAQ,EAAE;AADH,KAAD,CAAR;AAIAR,IAAAA,KAAK,CACFoB,IADH,CACQ,iCADR,EAC2CV,KAD3C,EAEGW,IAFH,CAESC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb,EAAsB;AACpBb,QAAAA,QAAQ,CAAC;AACPH,UAAAA,QAAQ,EAAE,KADH;AAEPC,UAAAA,SAAS,EAAE;AAFJ,SAAD,CAAR;AAID,OALD,MAKO;AACLE,QAAAA,QAAQ,CAAC;AACPH,UAAAA,QAAQ,EAAE,KADH;AAEPC,UAAAA,SAAS,EAAE;AAFJ,SAAD,CAAR;AAID;AACF,KAdH,EAeGgB,KAfH,CAeUC,GAAD,IAAS;AACdf,MAAAA,QAAQ,CAAC;AACPH,QAAAA,QAAQ,EAAE,KADH;AAEPC,QAAAA,SAAS,EAAE;AAFJ,OAAD,CAAR;AAID,KApBH;AAqBD,GA5BD;;AA8BA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAyBD","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport Hero from '../components/Hero';\nimport Content from '../components/Content';\n\nexport default function Contact(props) {\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    message: '',\n    disabled: false,\n    emailSent: null,\n  });\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    setState({\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setState({\n      disabled: true,\n    });\n\n    axios\n      .post('http://localhost:3030/api/email', state)\n      .then((res) => {\n        if (res.data.success) {\n          setState({\n            disabled: false,\n            emailSent: true,\n          });\n        } else {\n          setState({\n            disabled: false,\n            emailSent: false,\n          });\n        }\n      })\n      .catch((err) => {\n        setState({\n          disabled: false,\n          emailSent: false,\n        });\n      });\n  };\n\n  return (\n    <div className=\"contact\">\n      Contact\n        {/* <Form onSubmit={e => handleSubmit(e)}>\n          <Form.Group>\n            <Form.Label htmlFor='full-name'>Full Name</Form.Label>\n            <Form.Control id='full-name' name='name' type='text' value={state.name} onChange={e => handleChange(e)}></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='email'>Email</Form.Label>\n            <Form.Control id='email' name='email' type='email' value={state.email} onChange={e => handleChange(e)}></Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='message'>Message</Form.Label>\n            <Form.Control id='message' name='message' as='textarea' rows='3' value={state.message} onChange={e => handleChange(e)}></Form.Control>\n          </Form.Group>\n          <Button className='d-inline-block' variant='primary' type='submit' disabled={state.disabled}>\n            Send\n          </Button>\n\n          {state.emailSent === true && <p className='d-inline success-msg'>Email Sent</p>}\n          {state.emailSent === false && <p className='d-inline err-msg'>Email NOT Sent</p>}\n        </Form> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}